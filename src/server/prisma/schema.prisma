// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               String      @id @default(uuid())
  username         String      @unique
  password         String
  groups           UserGroup[]
  votes            Vote[]
  createdActivitys Activity[]
}

model Group {
  id        String      @id @default(uuid())
  name      String
  joinCode  Int         @default(autoincrement())
  users     UserGroup[]
  activitys Activity[]
}

model Activity {
  id            String @id @default(uuid())
  name          String
  placeid       Int?
  group         Group  @relation(fields: [groupId], references: [id])
  groupId       String
  status        Status @default(VOTING)
  type          Type   @default(FUN)
  distance      Int    @default(10)
  votes         Vote[]
  user          User   @relation(fields: [createdByUser], references: [id])
  createdByUser String
}

model UserGroup {
  id      String  @id @default(uuid())
  user    User    @relation(fields: [userId], references: [id])
  userId  String
  group   Group   @relation(fields: [groupId], references: [id], onDelete: Cascade)
  groupId String
  admin   Boolean @default(false)
}

model Vote {
  id         String   @id @default(uuid())
  user       User     @relation(fields: [userId], references: [id])
  userId     String
  activity   Activity @relation(fields: [activityId], references: [id])
  activityId String
  placeid    Int
}

enum Status {
  VOTING
  ACTIVE
  COMPLETED
}

enum Type {
  TEST
  FUN
  RELAX
  NIGHT
  FOOD
}
